int swapIntEndian(int n)	This is a function that will be necessary for the generation the MIDI file, as many values need to be written as big endian, but the project is written for little endian processors. It will take an integer and output the reverse endian equivalent. 
int swapShortEndian(int n)	This function will be exactly the same as the above, but for shorts instead of integers.
int writeVariableLengthQuantity(char *dest, unsigned int n)	Will write a specified variable length quantity to a given memory location. This function will be, again, important for generating the MIDI file, as many values need to be written as variable length quantities.
int generateMIDIFile(char **dest, struct mmlFileStruct *midiData)	This is the function where the MIDI file will be actually generated. It will take a pointer to a pointer (dest), which it will set to the location of the MIDI data generated. The MML data will be passed in in the structure “mmlFileStruct”, which is where the processed MML events are stored by the parser. It will return the length of the data generated.
